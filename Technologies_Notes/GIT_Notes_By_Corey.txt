
To set username :

git config --global user.name "officialpiupy"


To set email :

git config --global user.email "officialpiupy@gmail.com"


To get the list of username and email :

git config --list


To get help of any git command :

git help config/ git config --help


To get the list of hidden directories as well :

ls -la


To initialize the git repository :

git init


To remove a folder : 

rm -rf .git


To create a gitignore file : (files to be ignored from being considered by git)

touch .gitignore


Just add the name of the file to be ignored. It also accepts wildcards.

Contents of .gitignore file :

git_notes.txt
*.jpg


To push the files into staging area :

git add .gitignore  (pushing individually)

git add -A  (pushing all the files in any folder inside a git repository at once)

git add . (pushing all the files and folders of the current directory only)



To remove a file or a folder from staging area :

git reset abc.py


To remove all the files and folders (present anywhere inside a git repository) from staging area :

git reset


To commit the changes :

git commit -m "commit message here"


To check the commits :

git log 


To clone a repository :

git clone https://github.com/akaroshaa/sample.git . 

(. means current directory which is there by default)



To set the remote origin url :

git remote add origin https://github.com/akaroshaa/sample.git



To change the remote origin url :

git remote set-url origin https://github.com/akaroshaa/sample.git



To check the remote origin url :

git remote -v



To get the list of local branches :

git branch 



To get the list of local as well as remote branches :

git branch -a



To see the changes :

git diff



To get the latest version of code from the server :

git pull origin master



-----------------  creating branches to be merged into master branch ----------------------


git branch br1  (create a branch)

git checkout br1  (enter that branch)

made some changes and committed the same

git push -u origin br1  (pushed that branch into remote repo)

git checkout master  (checked into master branch)

git pull origin master  (got the latest code)

git branch --merged  (to check the merged branches)

git merge br1  (to merge the branch with master branch of local master repo)

git push -u origin master  (to push the changes into remote master repo)

git branch -d br1  (to delete the branch from local repo)

git push -u origin -d br1  (to delete the branch from remote repo)


----------------------------------------------------------------------------------------------

git checkout file1.txt  (to rollback the changes to the last commit of a single file)

git checkout -f  (to rollback the changes to the last commit of all the files)

git commit --amend -m "added two files"  (to override the last commit message)

git commit --amend  (to make a file part of the last commit)

git log --stat   (to check the file last added in the last commit)



------------------------ to handle wrong commits ---------------------------------------------


git checkout br1  (desired branch)

git cherry-pick "hash"  (however it doesn't remove the commit done in the wrong branch. To remove it
			 from the wrong branch, we need to do the reset)

reset is of 3 types :

1. soft  (it keeps the changes in the staging area. However, untracked files are still kept)

git reset --soft "hash"


2. mixed  (It is done by default. It keeps the changes in the working directory. However, 
	   untracked files are still kept)

git reset --mixed "hash" 
or
git reset "hash"


3. hard  (It doesn't keep the changes at all. However, untracked files are still kept)

git reset --hard "hash"


*** prefer hard reset to delete the commits 


git clean -df  (to clear untracked files. However, file will be deleted from the system as well)


----------------------------------------------------------------------------------------------



